                            /* Initial Exploration of Data*/

SELECT 
    * 
    FROM BIT_DB.customers
    ORDER BY order_id ASC
    LIMIT 10;
-- order_id appears as "..."

SELECT * 
    FROM BIT_DB.customers
    ORDER BY order_id DESC
    LIMIT 10;
-- order_id appears as "ORDER_ID"

SELECT * 
    FROM BIT_DB.JanSales
    ORDER BY orderid DESC
    LIMIT 5;

-- This error appears in the monthly sales reports too.

SELECT 
    * 
    FROM BIT_DB.JanSales
    WHERE length(orderid) = 6 -- this is make sure it is a valid order_id because it is 6 characters long
    AND orderid <> 'Order ID' --to exclude this output
    ORDER BY orderid ASC
    LIMIT 5;

SELECT 
    *
    FROM BIT_DB.customers
    WHERE length(order_id) = 6
    AND order_id <> 'Order ID'
    ORDER BY order_id ASC
    LIMIT 5;
    
SELECT 
    *
    FROM BIT_DB.customers
    WHERE length(order_id) = 6
    AND order_id <> 'Order ID'
    ORDER BY order_id DESC
    LIMIT 5;
    

                /* Data is cleaned and ready to be analyzed!*/

-- 1) How many orders were placed in January? Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!
SELECT
    COUNT(*)
    FROM  BIT_DB.JanSales
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID';
      
    -- There were 9,681 orders in January
    

-- 2) How many of those orders were for an iPhone?
SELECT
    COUNT(*)
    FROM  JanSales
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND Product = 'iPhone';

    -- Of the 9,681 orders in February, 379 of them were iPhones! 



-- 3) Select the customer account numbers for all the orders that were placed in February.
SELECT
    customers.acctnum
    FROM BIT_DB.customers customers
    JOIN BIT_DB.FebSales feb 
        ON customers.order_id = feb.orderID
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID';

    -- See output. 


-- 4) Which product was the cheapest one sold in January, and what was the price?
SELECT
    jan.Product,
    MIN(jan.price)
    FROM BIT_DB.JanSales jan
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND orderdate IS NOT NULL;
    
    -- AAA batteries (4-pack) was the cheapest item sold. It was 2.99.



-- 5) What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT 
    jan.product,
    ROUND(SUM((jan.Quantity)*jan.price),2) as jan_revenue
    FROM BIT_DB.JanSales jan
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
    GROUP BY jan.product;
        
    -- See output. 

-- 6) Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT 
    feb.Product,
    feb.Quantity,
     ROUND(SUM((feb.Quantity)*feb.price),2) as total_revenue
    FROM FebSales feb
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND location = '548 Lincoln St, Seattle, WA 98101'
    GROUP BY feb.Product;

    -- Only two AA-batteries(4-pk) were sold to this address, totaling $7.68.



-- 7) How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT 
    COUNT(customers.acctnum),
    ROUND(AVG((feb.Quantity)*feb.price),2) as avg_spending
    FROM customers
    JOIN FebSales feb
        ON customers.order_id = feb.orderID
    WHERE length(customers.order_id) = 6
        AND customers.order_id <> 'Order ID'
        AND feb.Quantity > 2;
    

    --There were 278 customers who order more than two products at a time in February and they spent an average of $13.83.

-- 8) List all the products sold in Los Angeles in February, and include how many of each were sold. Order by most sold to least
SELECT 
    feb.product,
    SUM(feb.Quantity) as total_quant_ordered
    FROM FebSales feb
        WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND location like '%Los Angeles%'
    GROUP BY feb.product
    ORDER BY total_quant_ordered DESC;
    
    
                    /* Advanced Customer & Order Analytic Questions*/

-- 1) Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).
SELECT 
    jan.location,
    COUNT(jan.orderID) as num_of_orders
    FROM JanSales jan
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND location like '%New York%'
    GROUP BY jan.location
    HAVING num_of_orders >= 3;

    -- In January, there 4 locations in New York that had 3 or more orders
    -- Elm St had 3 orders; Lincoln St had 3; Pine St had 3; Jefferson St. had 4. 


-- 2) How many of each type of headphone were sold in February?
SELECT 
    feb.product,
    COUNT(feb.Quantity) as total_count_sold
    FROM FebSales feb
        WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
        AND feb.product like '%headphone%'
    GROUP BY feb.product
    ORDER BY total_count_sold DESC;


    -- In February, 1186 wired headphones were sold, 1011 Apple Heaphones, and 834 Bose SoundSport Headphones.
    

-- 3) What was the average amount spent per account in February? (Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)
SELECT 
    ROUND(SUM((feb.Quantity)*feb.price)/COUNT(customers.acctnum),2) as avg_spent_per_account
    FROM customers
    JOIN FebSales feb
        ON customers.order_id = feb.orderID
        WHERE length(customers.order_id) = 6
        AND customers.order_id <> 'Order ID';

    -- The average amount spent per account in February was $190.
        

-- 4) What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).
SELECT 
    (SUM(feb.Quantity)/COUNT(customers.acctnum)) as avg_quant
    FROM customers
    JOIN FebSales feb
        ON customers.order_id = feb.orderID
        WHERE length(customers.order_id) = 6
        AND customers.order_id <> 'Order ID';
        
    --The average quantity of products ordered was 1.

-- 5) Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT 
    jan.product,
    ROUND(SUM((jan.Quantity)*jan.price),2) as total_jan_revenue
    FROM BIT_DB.JanSales jan
    WHERE length(orderid) = 6
        AND orderid <> 'Order ID'
    GROUP BY jan.product
    ORDER BY total_jan_revenue DESC
    LIMIT 1;

    --The Macbook Pro Laptop brought in the most revenue in January at $399,500. 
